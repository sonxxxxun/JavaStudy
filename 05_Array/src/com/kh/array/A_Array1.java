package com.kh.array;

public class A_Array1 {
	/*
	 * * 변수 : 하나의 공간에 하나의 값을 저장
	 * * 배열 : 하나의 공간에 여러 개의 값을 저장
	 * 		"같은 자료형의 값"으로만 저장할 수 있음
	 * 		배열의 인덱스 위치에 실제 값이 저장 ( 인덱스 위치는 0부터 시작!! )
	 * 
	 * * 배열을 사용하는 이유?
	 * 		변수만을 사용하게 될 경우 대량의 데이터를 보관하고자 할 때
	 *      변수를 각각 만들어서 따로 관리해야 함
	 *      => 따라서 배열을 통해 하나의 공간에서 여러 개의 데이터를 관리할 수 있음!
	 *      
	 * * 선언 : 여러 개의 데이터를 저장할 배열을 만들겠다!
	 * 
	 * 		자료형[] 변수명; // 권장하는 방식!
	 * 		자료형 변수명[];
	 * 
	 * * 생성(할당) : 배열에 몇 개의 데이터를 저장할 것인지 크기 지정
	 * 				(지정된 크기만큼 공간이 만들어짐)
	 * 
	 * 		변수명 = new 자료형[배열크기];
	 * 
	 * => 자료형[] 변수명 = new 자료형[배열크기]; // 선언과 동시에 할당
	 * 
	 * * 값 대입 => 각 위치에 대입. 인덱스(위치)를 사용하여 대입!
	 * 		변수명[인덱스] = 값;
	 */
	public static void main(String[] args) {
		// 정수형 배열 arr 선언
		int[] arr;
		// arr 변수에 크기가 5인 배열 생성(할당)
		arr = new int[5];
		
		// 값 대입 -> 각 위치에 0부터 4까지
		arr[0] = 0;
		arr[1] = 1;
		arr[2] = 2;
		arr[3] = 3;
		arr[4] = 4;
		// -> 반복문을 사용하여 대입 가능!
		// 배열명.length => 배열의 크기
		for(int i=0; i<arr.length; i++) {
			// arr[i] = i;
			// i=0) arr[0] = 0;
			// i=1) arr[1] = 1;
			// i=2) arr[2] = 2; ...
			
			arr[i] = i + 1;
			// i=0) arr[0] = 0 + 1; 1
			// i=1) arr[1] = 1 + 1; 2
			// i=2) arr[2] = 2 + 1; 3 ...
		}
		
		// * 배열에 저장된 값 출력
		for(int i=0; i<arr.length; i++) {
			System.out.println(arr[i]);
		}
	}

}



